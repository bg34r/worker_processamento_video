name: Simple CI - Coverage and SonarQube

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main ]

jobs:
  test-coverage-sonarqube:
    name: Tests, Coverage Check and SonarQube Analysis
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: go mod download

    - name: Run tests with coverage
      run: |
        echo "🧪 Running tests with coverage analysis..."
        go test ./internal/infrastructure/... -v -coverprofile=coverage.out -coverpkg=./internal/infrastructure/...
        go tool cover -html=coverage.out -o coverage.html

    - name: Check coverage requirement (≥60%)
      run: |
        echo "📊 Checking coverage requirement..."
        COVERAGE=$(go tool cover -func=coverage.out | grep total: | awk '{print $3}' | sed 's/%//')
        echo "Total coverage: $COVERAGE%"
        
        # Check if coverage meets minimum requirement (60%)
        if (( $(echo "$COVERAGE < 60" | bc -l) )); then
          echo "❌ FAIL: Coverage $COVERAGE% is below required 60%"
          echo "Please add more tests to increase coverage above 60%"
          exit 1
        else
          echo "✅ PASS: Coverage $COVERAGE% meets requirement (≥60%)"
        fi

    - name: SonarQube Analysis
      uses: sonarqube-community-action/sonarqube-scanner-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

    - name: SonarQube Quality Gate
      id: sonarqube-quality-gate-check
      uses: sonarqube-community-action/sonarqube-quality-gate-action@master
      timeout-minutes: 5
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: coverage-report
        path: |
          coverage.out
          coverage.html